[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "py4csr"
version = "0.1.0"
authors = [
    {name = "py4csr Contributors", email = "info@py4csr.com"}
]
description = "Python for Clinical Study Reporting - Professional clinical trial reporting package"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
]
keywords = [
    "clinical trials",
    "pharmaceutical", 
    "biostatistics",
    "regulatory",
    "CDISC",
    "ADaM",
    "SAS",
    "reporting",
    "statistics",
    "clinical research",
]
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0",
    "jinja2>=3.0.0",
    "pyyaml>=5.4.0",
    "openpyxl>=3.0.0",
    "reportlab>=3.6.0",
    "python-docx>=0.8.11",
    "xlsxwriter>=3.0.0",
    "tabulate>=0.8.9",
    "click>=8.0.0",
    "tqdm>=4.60.0",
    "pathlib2>=2.3.0; python_version<'3.4'",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-xdist>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "isort>=5.0",
    "pre-commit>=2.0",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx-autodoc-typehints>=1.12",
    "nbsphinx>=0.8",
    "jupyter>=1.0",
    "ipykernel>=6.0",
]
sas = [
    "pyreadstat>=1.1.0",
    "sas7bdat>=2.2.0",
]
plotting = [
    "plotly>=5.0",
    "bokeh>=2.0",
    "seaborn>=0.11",
    "plotnine>=0.8",
]
stats = [
    "statsmodels>=0.12.0",
    "scikit-learn>=1.0.0",
    "lifelines>=0.26.0",
]
all = [
    "pyreadstat>=1.1.0",
    "sas7bdat>=2.2.0",
    "plotly>=5.0",
    "bokeh>=2.0",
    "seaborn>=0.11",
    "plotnine>=0.8",
    "statsmodels>=0.12.0",
    "scikit-learn>=1.0.0",
    "lifelines>=0.26.0",
]

[project.urls]
Homepage = "https://github.com/your-org/py4csr"
Documentation = "https://py4csr.readthedocs.io"
Repository = "https://github.com/your-org/py4csr.git"
"Bug Tracker" = "https://github.com/your-org/py4csr/issues"
Changelog = "https://github.com/your-org/py4csr/blob/main/CHANGELOG.md"
Discussions = "https://github.com/your-org/py4csr/discussions"

[project.scripts]
py4csr = "py4csr.cli.main:main"

[tool.setuptools]
packages = ["py4csr"]

[tool.setuptools.package-data]
py4csr = [
    "templates/*.yaml",
    "templates/*.json", 
    "config/*.yaml",
    "examples/data/*.csv",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["py4csr"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "real_data: marks tests that require real clinical data",
]

# Coverage configuration
[tool.coverage.run]
source = ["py4csr"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "bokeh.*",
    "reportlab.*",
    "pyreadstat.*",
    "sas7bdat.*",
]
ignore_missing_imports = true 